# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Publish Installers

on:
  push:
    tags:
      - "paintera-*.*.*"
      - "prerelease-*"
  workflow_dispatch:



env:
  DEV_IDENTITY: BXPZTQZ35S # Your Apple Dev identity, something like BXPZTQZ35S
  PRIMARY_BUNDLE_ID: org.janelia.saalfeldlab.Paintera # Unique to your app, often the launcher class

jobs:
  build_installers:
    name: Build Installers
    uses: ./.github/workflows/build-installers.yml

  create_release:
    needs: build_installers
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
      - name: Set Version
        run: |
          tag_name=$(echo ${{ github.ref }} | grep -oE "[^/]+$")
          echo "VERSION=$tag_name" >> $GITHUB_ENV
          if [[ $tag_name == paintera-* ]]; then
            echo "PRERELEASE=false" >> $GITHUB_ENV
          else
            echo "PRERELEASE=true" >> $GITHUB_ENV
          fi
      - name: Generate Release Notes
        if: env.PRERELEASE == 'false'
        uses: orhun/git-cliff-action@v4
        with:
          args: -l --strip header --output RELEASE_NOTES.md
        env:
          OUTPUT: RELEASE_NOTES.md
      - name: Generate Prerelease Log
        if: env.PRERELEASE == 'true'
        uses: orhun/git-cliff-action@v4
        with:
          args: -u --strip header --output RELEASE_NOTES.md
        env:
          OUTPUT: RELEASE_NOTES.md
      - name: Rename Artifacts
        run: |
          mv Paintera-windows-latest-*/*.msi Paintera-${{ env.VERSION }}-Windows.msi
          mv Paintera-ubuntu-22.04-*/*.deb Paintera-${{ env.VERSION }}-ubuntu-22.04_x86_64.deb
          mv Paintera-ubuntu-24.04-*/*.deb Paintera-${{ env.VERSION }}-ubuntu-24.04_x86_64.deb
          mv Paintera-macos-13-*/*.dmg Paintera-${{ env.VERSION }}-MacOS-Intel.dmg
          mv Paintera-macos-14-*/*.dmg Paintera-${{ env.VERSION }}-MacOS-AppleSilicon.dmg
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Paintera ${{ env.VERSION }}
          tag_name: ${{ github.ref }}
          prerelease: ${{ env.PRERELEASE }}
          body_path: RELEASE_NOTES.md
          files: |
            Paintera-${{ env.VERSION }}-Windows.msi
            Paintera-${{ env.VERSION }}-ubuntu-22.04_x86_64.deb
            Paintera-${{ env.VERSION }}-ubuntu-24.04_x86_64.deb
            Paintera-${{ env.VERSION }}-MacOS-Intel.dmg
            Paintera-${{ env.VERSION }}-MacOS-AppleSilicon.dmg